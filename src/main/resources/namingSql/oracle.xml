<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<sql id="select_user">
		<![CDATA[
			select * form sys_user where username = $name
		]]>
	</sql>
	<!--数据字典树形展示：┠名称  -->
	<sql id="select_dictTypeName">
		<![CDATA[
			select new DictType(id,dictTypeTitle, (lpad('┠', rank * 4 - 1, '　') || dictTypeName) as dictTypeName, myLocale, parentId, rank, seqNo) from DictType where myLocale = '$locale' order by seqNo
		]]>
	</sql>
	<sql id="select_dictEntryName">
		<![CDATA[
			select id,(lpad('┠', rank * 4 - 1, '　') || dictEntryName) as dictEntryName from DictEntry order by seqNo
		]]>
	</sql>
	<sql id="select_authorityName">
		<![CDATA[
			select new SysAuthority(id,(lpad('┠',rank * 4 - 1, '　') || authority_Name) as authorityName) from SysAuthority order by seqNo
		]]>
	</sql>
	<sql id="select_OrganizationBO_getOrgsByOrgName">
		<![CDATA[
			from SysOrganization a where not exists(select 1 from SysOrganization b where b.orgseq like '%.$companyId.%'  and b.orgType in ('402881b22afad3b1012afae5e33d0005','402881b22afad3b1012afae5a4200004') and a.orgseq like b.orgseq||'%' and b.id<>'$companyId') and orgseq like  '%.$companyId.%' and a.orgname='$orgName' order by orgseq
		]]>
	</sql>
	
 <!--用户同步相关SQL  -->
	<!-- 1、验证  -->
	<sql id="select_UserSyncCheckDtsData">
		<![CDATA[
		select '重复的机构编号：'||org_code||'，重复的数据不导入。' results from t_dts_org group by org_code having count(1)>1
			union all
			select '重复的登录名：'||user_id||'，重复的数据不导入。' from t_dts_emp group by user_id having count(1)>1
			union all
			select '重复的人名：'||user_name||'，重复的数据不导入。' from t_dts_emp group by user_name having count(1)>1
			union all
			select '无法识别的机构类型：id-'||id||'，名称：'||org_name||'数据不导入。' from t_dts_org where org_type not in('402881b22afad3b1012afae5a4200004','402881b22afad3b1012afae799c60008') or org_type is null
			union all
			select '无法识别的职务：'||duty  from t_dts_emp 
			where duty not in(select  duty_name from t_sys_duty)
		]]>
	</sql>	
	<!-- 2、清理数据  -->
	<sql id="delete_clearDtsOrg">
		<![CDATA[
			delete from t_dts_org a 
			where a.id>(select min(id) from t_dts_org b where b.org_code=a.org_code) 
	        or org_type not in('402881b22afad3b1012afae5a4200004','402881b22afad3b1012afae799c60008') or org_type is null
	        or not exists(select id from t_dts_org b where a.id=b.id start with parent_id is null connect by prior id=PARENT_ID)
	    ]]>
	</sql>
	<sql id="delete_clearDtsEmp">
		<![CDATA[
			delete from t_dts_emp a
			where a.id>(select min(id) from t_dts_emp b where b.user_id=a.user_id)
			or a.id>(select min(id) from t_dts_emp b where b.user_name=a.user_name)
		]]>
	</sql>

	<!-- 3、导入（加载） -->
	<!-- 机构和机构相关 -->
	<!-- 1全部设为注销 -->
	<sql id="update_orgLogout">
		<![CDATA[
			update t_sys_organization set estatus='93F4A801CB69C12B793EEC4137E9C464'
		]]>
	</sql>
	<!-- 2更新已有数据 -->
	<sql id="update_existDatas">
		<![CDATA[
			update t_sys_organization b set (esort, is_leaf, org_level, estatus, org_type, org_code, org_name, id_seq,parent_id,emp_id)
			=(select rank()over(partition by parent_id order by esort,orgcode), is_leaf, org_level, status, org_type, orgcode, orgname, orgseq,parent_id
			,nvl('',nvl((select id from t_dts_emp emp where emp.user_name=a.emp)
			                   ,(select id from t_sys_employee emp2 where emp2.user_name=a.emp)
			              ))
			  from (select id, CONNECT_BY_ISLEAF is_leaf
			              ,level org_level,'17FB7DB196BFF6A098A3989471434A82' status
			              ,case when level=1 then '402881b22afad3b1012afae5a4200004'--总公司
			                    when level>1 and ORG_TYPE='402881b22afad3b1012afae5a4200004' then '402881b22afad3b1012afae5e33d0005'--分公司
			                    else '402881b22afad3b1012afae7520f0007'--暂时全部置为总公司部门
			               end org_type
			              ,ORG_CODE orgcode,ORG_NAME orgname,sys_connect_by_path(id,'.')||'.' orgseq,case when level=1 then null else parent_id end parent_id,esort,emp
			              from t_dts_org a
			              start with PARENT_ID is null
			              connect by prior id=PARENT_ID
			        )a
			  where a.id=b.id
			)
			where exists(select 1 from t_dts_org a where a.id=b.id
			)
		]]>
	</sql>
	<!-- 3插入新增数据 -->
	<sql id="insert_newDatas">
		<![CDATA[
			insert into t_sys_organization
			  (esort,id,is_leaf, org_level, estatus, org_type, org_code, org_name, id_seq,parent_id,emp_id)
			select rank()over(partition by parent_id order by esort,orgcode),id,is_leaf,org_level,status,org_type,orgcode,org_name,orgseq,parent_id,emp_id
			from
			(select id, CONNECT_BY_ISLEAF is_leaf
			,level org_level,'17FB7DB196BFF6A098A3989471434A82' status
			,case when level=1 then '402881b22afad3b1012afae5a4200004'--总公司
			                    when level>1 and ORG_TYPE='402881b22afad3b1012afae5a4200004' then '402881b22afad3b1012afae5e33d0005'--分公司
			                    else '402881b22afad3b1012afae7520f0007'--暂时全部置为总公司部门
			               end org_type
			,ORG_CODE orgcode,org_name,sys_connect_by_path(id,'.')||'.' orgseq,parent_id
			              ,nvl((select id from t_dts_emp emp where emp.user_name=a.emp)
			                   ,(select id from t_sys_employee emp2 where emp2.user_name=a.emp)
			              )emp_id,esort
			from t_dts_org a
			where not exists(select 1 from t_sys_organization c where c.id=a.id)
			start with parent_id is null
			connect by prior id=parent_id
			)
		]]>
	</sql>
	<!-- 4修正公司类型 -->
	<sql id="update_companyType">
		<![CDATA[
			update t_sys_organization b set b.org_type='402881b22afad3b1012afae799c60008'
			where b.org_type='402881b22afad3b1012afae7520f0007' 
			and exists(select 1 from t_sys_organization c where c.org_type='402881b22afad3b1012afae5e33d0005' and b.id_seq like c.id_seq||'%')
		]]>
	</sql>
	<!-- 5为各公司初始化必须的数据 -->
	<!-- a,风险 -->
	<sql id="insert_risksCompany">
		<![CDATA[
			insert into t_rm_risks
			 (id,archive_status, deal_status, elevel, is_leaf, is_risk_class
			 , risk_name, id_seq, estatus, company_id,template_id,esort)
			select id,'1','1',1,'0','4'
			,'整体风险','.'||id||'.','3',id,'1',1
			from t_sys_organization b
			where b.org_type in('402881b22afad3b1012afae5a4200004','402881b22afad3b1012afae5e33d0005')
			and not exists(select 1 from t_rm_risks a where a.company_id=b.id)
		]]>
	</sql>
	<!-- b,指标 -->
	<sql id="insert_KPICompany">
		<![CDATA[
			insert into t_kpi_kpi
			  (id, is_catalog, is_leaf, kpi_name, id_seq, esort, estatus, elevel, company_id)
			select id,'1','0','指标库','.'||id||'.',1,'1',1,id
			from t_sys_organization b
			where b.org_type in('402881b22afad3b1012afae5a4200004','402881b22afad3b1012afae5e33d0005')
			and not exists(select 1 from t_kpi_kpi a where a.company_id=b.id)
		]]>
	</sql>
	<!-- c,变量-->
	<sql id="insert_variableCompany">
		<![CDATA[
			insert into t_kpi_variable
			  (id,elevel, is_catalog, is_disabled, is_leaf, id_seq, variable_name,esort, estatus, company_id)
			select id,1,'1','1','0','.'||id||'.','变量库',1,'1',id
			from t_sys_organization b
			where b.org_type in('402881b22afad3b1012afae5a4200004','402881b22afad3b1012afae5e33d0005')
			and not exists(select 1 from t_kpi_variable a where a.company_id=b.id)
		]]>
	</sql>
	<!-- d,资产-->
	<sql id="insert_assetsCompany">
		<![CDATA[
			insert into t_assets_assets
			  (id,elevel, assets_name, deal_status, is_leaf, id_seq, esort, estatus, company_id)
			select id,1,'资产库','1','0','.'||id||'.',1,'3',id
			from t_sys_organization b
			where b.org_type in('402881b22afad3b1012afae5a4200004','402881b22afad3b1012afae5e33d0005')
			and not exists(select 1 from t_assets_assets a where a.company_id=b.id)
		]]>
	</sql>
	<!-- e,流程-->
	<sql id="insert_processureCompany">
		<![CDATA[
			 insert into t_processure_processure
			  (id, deal_status, is_leaf, id_seq, elevel, processure_name, esort, estatus, company_id)
			select id,'1','0','.'||id||'.',1,'流程库',1,'3',id
			from t_sys_organization b
			where b.org_type in('402881b22afad3b1012afae5a4200004','402881b22afad3b1012afae5e33d0005')
			and not exists(select 1 from t_processure_processure a where a.company_id=b.id)
		]]>
	</sql>
	<!-- 人员和人员相关-->
	<!-- 增加部门下不存在的岗位名称-->
	<sql id="insert_newPosition">
		<![CDATA[
			insert into t_sys_position
			(id,estatus,posi_name,org_id,esort)
			select sys_guid(),'DEDEEBD63C64E0F557C0BEFEF87E3D3F',position,org.id,0
			from t_dts_emp emp,t_dts_org org
			where not exists(select 1 from t_sys_position b where emp.position=b.posi_name and b.org_id=org.id) and emp.position is not null
			and ','||emp.org||',' like '%,'||org.id||',%'
			group by emp.position,org.id
		]]>
	</sql>
	<!-- 操作员-->
	<sql id="update_user">
		<![CDATA[
			 update t_sys_user b
			set (is_enable,real_name,estatus,user_name)=
			(select '1',user_name,'30270F7E87566A24C94B5FD0D90672C4',user_id
			  from  t_dts_emp a
			  where a.id=b.id
			)
			where exists(select 1 from t_dts_emp a where a.id=b.id)
		]]>
	</sql>
	<sql id="insert_user">
		<![CDATA[
			 insert into t_sys_user
			(id,is_enable,password,real_name,estatus,user_name,lock_state)
			select id,'1'
			,'21232f297a57a5a743894a0e4a801fc3',user_name,'30270F7E87566A24C94B5FD0D90672C4',user_id,'0'
			from  t_dts_emp a
			where not exists(select 1 from t_sys_user b where a.id=b.id)
		]]>
	</sql>	
	<!-- 员工-->	
	<sql id="update_emp">
		<![CDATA[
			update t_sys_employee a
			set (estatus,org_id,emp_code,user_id,user_name,real_name,emp_name)=
			(select 'FC2EB2C12EB0CB9D0137AAF4E5B370DE'
			,(select e.id from t_sys_organization d,t_sys_organization e
			   where ','||b.org||',' like '%,'||d.id||',%'
			  and length(e.id_seq) in ( /*根据id_seq查找最近的上级部门的id_seq的长度*/
			                        select max(length(id_seq))
			                          from t_sys_organization a
			                         where d.id_seq like a.id_seq || '%'
			                          and org_type in('402881b22afad3b1012afae5a4200004','402881b22afad3b1012afae5e33d0005') )
			  and d.id_seq like e.id_seq || '%' and e.org_type in('402881b22afad3b1012afae5a4200004','402881b22afad3b1012afae5e33d0005')
			)/*员工所属公司*/
			,user_id,id,user_id,user_name,user_name
			from  t_dts_emp b
			where a.id=b.id
			)
			where exists(select 1 from t_dts_emp b where a.id=b.id)
		]]>
	</sql>
	<!--设置人员主责部门 2011年12月30日修改-->
	<sql id="update_main_org">
		<![CDATA[
		update t_sys_emp_org a
        set a.ismain=(case when (emp_id,org_id) in
         (select d.id,max(c.id)
         from t_dts_emp d,t_sys_organization c
            ,TABLE(CAST(MULTISET( SELECT SUBSTR (','||d.org||','          
                                          ,INSTR (','||d.org||',', ',', 1, LEVEL  ) + 1
                                          ,INSTR (','||d.org||',', ',', 1, LEVEL+1) - INSTR (','||d.org||',', ',', 1, LEVEL) -1 
                                          ) 
                              FROM DUAL
                            CONNECT BY LEVEL <= LENGTH(','||d.org||',')-LENGTH(REPLACE(','||d.org||',',',',''))-1 
                           )
             AS SYS.ODCIVARCHAR2LIST ) 
             ) t2
         where t2.column_value=c.id
         group by d.id
         )then '1' else '0' end
        )
        where exists(select 1 from t_dts_emp b where a.emp_id=b.id)
		]]>
	</sql>
	<!-- 人员关联职务-->	
	<!-- 如果来源数据没有职务，不更新；如果目标数据已经有职务，不更新-->	
	<sql id="update_duty">
		<![CDATA[
			update t_sys_employee a set a.duty_id=(select c.id from t_dts_emp b,t_sys_duty c where b.duty=c.duty_name and b.id=a.id)
			where a.duty_id is null and exists(select c.id from t_dts_emp b,t_sys_duty c where b.duty=c.duty_name and b.id=a.id)
		]]>
	</sql>
	<sql id="insert_sysEmployee">
		<![CDATA[
			insert into t_sys_employee
			(id,estatus,org_id,emp_code,user_id,duty_id,user_name,real_name,emp_name)
			select ,id,'FC2EB2C12EB0CB9D0137AAF4E5B370DE'
			,(select e.id from t_sys_organization d,t_sys_organization e
			   where ','||a.org||',' like '%,'||d.id||',%'
			  and length(e.id_seq) in ( /*根据id_seq查找最近的上级部门的id_seq的长度*/
			                        select max(length(id_seq))
			                          from t_sys_organization a
			                         where d.id_seq like a.id_seq || '%'
			                          and org_type in('402881b22afad3b1012afae5a4200004','402881b22afad3b1012afae5e33d0005') )
			  and d.id_seq like e.id_seq || '%' and e.org_type in('402881b22afad3b1012afae5a4200004','402881b22afad3b1012afae5e33d0005')
			)/*员工所属公司*/
			,user_id,id
			,(select id from t_sys_duty c where c.duty_name=a.duty),user_id,user_name,user_name
			from  t_dts_emp a
			where not exists(select 1 from t_sys_employee b where a.id=b.id)
		]]>
	</sql>
	<!-- 人员关联岗位-->	
	<!-- 如果没有岗位，不更新；只插入，不删除-->
	<sql id="insert_sysEmpPost">
		<![CDATA[
			insert into T_SYS_EMP_POSI
			(id,ismain,emp_id,posi_id)
			select sys_guid(),'0',a.id,b.id
			from t_dts_emp a,t_sys_position b,t_sys_organization c
			where a.position=b.posi_name
			and not exists(select 1 from T_SYS_EMP_POSI c where c.emp_id=a.id and c.posi_id=b.id)
			and ','||a.org||',' like '%,'||c.id||',%' and b.org_id=c.id
		]]>
	</sql>
	<!--人员关联部门-->
	<!--只插入，不删除-->
	<sql id="insert_sysEmpOrg">
		<![CDATA[
			insert into t_sys_emp_org
			(id,ismain,emp_id,org_id)
			select sys_guid(),'0',a.id,c.id
			from t_dts_emp a,t_sys_organization c
			where ','||a.org||',' like '%,'||c.id||',%'
			and not exists(select 1 from t_sys_emp_org d where d.org_id=c.id and d.emp_id=a.id)
		]]>
	</sql>
	<sql id="query_monthRiskAnalyse_risksort">
		<![CDATA[
			select
	       count(case when biz_concept=0 then 1 else null end) lownum,
	       count(case when biz_concept=1 then 1 else null end) midnum,
	       count(case when biz_concept=2 then 1 else null end) highnum,
	       risksort
	       from 
	      (select
	            max(this_.impacts*this_.probability) as status,
	            r1_.risk_name as y1_,
	            r1_.id as y2_,
	            pr2_.risk_name as y3_,
	            max(this_.id) as y4_,
	            max(this_.impacts) as y5_,
	            max(this_.probability) as y6_ 
	            ,( select t.risk_name from t_rm_risks t where t.id = r1_.parent_id) risksort/*风险大类*/
	            ,nvl(max((select biz_concept 
	              from t_rm_chartmatrix cm 
	              where ceil(this_.probability-0.001)=cm.x_value and ceil(this_.impacts-0.001)=cm.y_value
	              and cm.company_id=r1_.company_id
	            )),-1) biz_concept
	        from
	            t_kpi_risk_declaration this_ 
	        inner join
	            t_rm_risks r1_ 
	                on this_.risk_id=r1_.id 
	        inner join
	            t_rm_risks pr2_ 
	                on r1_.parent_id=pr2_.id 
	       where
		        this_.emonth=:month
		        and this_.eyear=:year
	        group by
	            r1_.risk_name,
	            r1_.id,
	            pr2_.risk_name,
	            r1_.id_seq,
	            r1_.parent_id)
	        group by risksort
		]]>
	</sql>
	
	<sql id="query_monthRiskAnalyse_org">
		<![CDATA[
			select
		       count(case when biz_concept=0 then 1 else null end) lownum,
		       count(case when biz_concept=1 then 1 else null end) midnum,
		       count(case when biz_concept=2 then 1 else null end) highnum,
			 org_name
			from 
			(
			   select
			        max(this_.impacts*this_.probability) as status,
			        r1_.risk_name as y1_,
			        r1_.id as y2_,
			        pr2_.risk_name as y3_,
			        max(this_.id) as y4_,
			        max(this_.impacts) as y5_,
			        max(this_.probability) as y6_ 
			        ,nvl(o.org_name,'无')org_name /*主责部门*/
			        ,max((select biz_concept 
		              from t_rm_chartmatrix cm 
		              where ceil(this_.probability-0.001)=cm.x_value and ceil(this_.impacts-0.001)=cm.y_value
		              and cm.company_id=r1_.company_id
		            )) biz_concept
			    from
			        t_kpi_risk_declaration this_ 
			    inner join
			        t_rm_risks r1_ 
			            on this_.risk_id=r1_.id 
			    inner join
			        t_rm_risks pr2_ 
			            on r1_.parent_id=pr2_.id 
			    left join ( t_rm_risk_org ro inner join t_sys_organization o on ro.treatment_org_id = o.id and ro.etype = 1)
			                on r1_.id = ro.risk_id
			    where
			        this_.emonth=:month
			        and this_.eyear=:year
			    group by
			        r1_.risk_name,
			        r1_.id,
			        pr2_.risk_name,
			        r1_.id_seq,
	            	r1_.parent_id
			        ,o.org_name
			 )
			 group by org_name
			 order by org_name

		]]>
	</sql>

	<sql id="query_monthRiskAnalyse_plates">
		<![CDATA[
			select
		       count(case when biz_concept=0 then 1 else null end) lownum,
		       count(case when biz_concept=1 then 1 else null end) midnum,
		       count(case when biz_concept=2 then 1 else null end) highnum,
			 dict_entry_name
			from 
			(
			   select
			        max(this_.impacts*this_.probability) as status,
			        r1_.risk_name as y1_,
			        r1_.id as y2_,
			        pr2_.risk_name as y3_,
			        max(this_.id) as y4_,
			        max(this_.impacts) as y5_,
			        max(this_.probability) as y6_ 
			        ,p.dict_entry_name /*主责部门*/
			        ,max((select biz_concept 
		              from t_rm_chartmatrix cm 
		              where ceil(this_.probability-0.001)=cm.x_value and ceil(this_.impacts-0.001)=cm.y_value
		              and cm.company_id=r1_.company_id
		            )) biz_concept
			    from
			        t_kpi_risk_declaration this_ 
			    inner join
			        t_rm_risks r1_ 
			            on this_.risk_id=r1_.id 
			    inner join
			        t_rm_risks pr2_ 
			            on r1_.parent_id=pr2_.id 
			    left join ( t_rm_risks_plates rp inner join t_sys_dict_entry p on rp.eplate = p.id)
                	on r1_.id = rp.risk_id
			    where
			        this_.emonth=:month
			        and this_.eyear=:year
			    group by
			        r1_.risk_name,
			        r1_.id,
			        pr2_.risk_name,
			        r1_.id_seq,
	            	r1_.parent_id
			        ,p.dict_entry_name
			 )
			 group by dict_entry_name

		]]>
	</sql>
	
	<sql id="query_monthRiskAnalyse_process">
		<![CDATA[
			select
		       count(case when biz_concept=0 then 1 else null end) lownum,
		       count(case when biz_concept=1 then 1 else null end) midnum,
		       count(case when biz_concept=2 then 1 else null end) highnum,
       processure_name
      from 
      (
         select
              max(this_.impacts*this_.probability) as status,
              r1_.risk_name as y1_,
              r1_.id as y2_,
              pr2_.risk_name as y3_,
              max(this_.id) as y4_,
              max(this_.impacts) as y5_,
              max(this_.probability) as y6_ 
              ,pr.processure_name /*流程名称*/
	        ,max((select biz_concept 
              from t_rm_chartmatrix cm 
              where ceil(this_.probability-0.001)=cm.x_value and ceil(this_.impacts-0.001)=cm.y_value
              and cm.company_id=r1_.company_id
            )) biz_concept
          from
              t_kpi_risk_declaration this_ 
          inner join
              t_rm_risks r1_ 
                  on this_.risk_id=r1_.id 
          inner join
              t_rm_risks pr2_ 
                  on r1_.parent_id=pr2_.id 
          left join ( t_processure_risk_processure rpr inner join t_processure_processure pr on rpr.processure_id = pr.id)
                  on r1_.id = rpr.risk_id
          where
              this_.emonth=:month
	          and this_.eyear=:year
          group by
              r1_.risk_name,
              r1_.id,
              pr2_.risk_name,
              r1_.id_seq,
           	r1_.parent_id
              ,pr.processure_name
       )
       group by processure_name

		]]>
	</sql>
	<sql id="query_monthriskanalyse_cause">
		<![CDATA[
			select
		       count(case when biz_concept=0 then 1 else null end) lownum,
		       count(case when biz_concept=1 then 1 else null end) midnum,
		       count(case when biz_concept=2 then 1 else null end) highnum,
       (select dict_entry_name from t_sys_dict_entry where id = MOTIVATION) MOTIVATION
      from 
      (
         select
              max(this_.impacts*this_.probability) as status,
              r1_.risk_name as y1_,
              r1_.id as y2_,
              pr2_.risk_name as y3_,
              max(this_.id) as y4_,
              max(this_.impacts) as y5_,
              max(this_.probability) as y6_ 
              ,r1_.MOTIVATION /*动因名称*/
	        ,max((select biz_concept 
              from t_rm_chartmatrix cm 
              where ceil(this_.probability-0.001)=cm.x_value and ceil(this_.impacts-0.001)=cm.y_value
              and cm.company_id=r1_.company_id
            )) biz_concept
          from
              t_kpi_risk_declaration this_ 
          inner join
              t_rm_risks r1_ 
                  on this_.risk_id=r1_.id 
          inner join
              t_rm_risks pr2_ 
                  on r1_.parent_id=pr2_.id 
          where
              this_.emonth=:month
            and this_.eyear=:year
          group by
              r1_.risk_name,
              r1_.id,
              pr2_.risk_name,
              r1_.id_seq,
           	  r1_.parent_id
              ,r1_.MOTIVATION
       )
       group by MOTIVATION
		]]>
	</sql>
	
	<sql id="query_companyYearHisReView">
		<![CDATA[
		 select
		        sum(FINANCE_LOST_AMOUNT) ,
		        count(1) ,
		        to_char(OCCUR_DATE,
		        'mm') month ,
		        to_char(OCCUR_DATE,
		        'yyyy') year   
		    from
		        t_rm_event    
		    where
		        ( to_char(OCCUR_DATE,'yyyy') =:byear and  to_char(OCCUR_DATE,'mm') > :bmonth) or 
		        ( to_char(OCCUR_DATE,'yyyy') =:eyear and  to_char(OCCUR_DATE,'mm') <=:emonth)
		    group by
		        to_char(OCCUR_DATE,
		        'mm'),to_char(OCCUR_DATE,
		        'yyyy')
		    order by 4,3 
		]]>
	</sql>
	<sql id="query_processure_by_processureidstr">
		<![CDATA[
			select
		        t.id,
		        t.processure_name,
		        t.parent_id 
		    from
		        t_processure_processure t 
		    where
		        exists(
		            select
		                1 
		            from
		                t_processure_processure t2 
		            where
		                t2.id_seq like t.id_seq||'%'
		        ) 
		        and parent_id is not null 
		        and not exists(
		        	select 
		        		1 
		        	from 
		        		t_processure_processure t3 
		        	where t3.id in(:filters) 
		        		and t.id_seq like t3.id_seq||'%'
		        )
		    order by
		        t.id_seq
		]]>
	</sql>
	<sql id="query_risk_cause_level3">
		<![CDATA[
			select
				risk.ID,risk.RISK_NAME,
				cause_a.id a_id,cause_a.cause_risk_id a_risk_id,risk_a.RISK_NAME a_name,
				cause_b.id b_id,cause_b.cause_risk_id b_risk_id,risk_b.RISK_NAME b_name,
				cause_c.id c_id,cause_c.cause_risk_id c_risk_id,risk_c.RISK_NAME c_name
			from 
				t_rm_risks risk
				left join t_rm_risk_cause_analyze cause_a on risk.id=cause_a.risk_id and cause_a.etype=:estatus
				left join t_rm_risks risk_a on cause_a.cause_risk_id=risk_a.id
				left join t_rm_risk_cause_analyze cause_b on cause_a.cause_risk_id=cause_b.risk_id and cause_b.etype=:estatus
				left join t_rm_risks risk_b on cause_b.cause_risk_id=risk_b.id
				left join t_rm_risk_cause_analyze cause_c on cause_b.cause_risk_id=cause_c.risk_id and cause_c.etype=:estatus
				left join t_rm_risks risk_c on cause_c.cause_risk_id=risk_c.id
			where 
				risk.id=:riskId
			order by a_id,b_id,c_id
		]]>
	</sql>
	<sql id="insert_assessmentInfo_from_process">
		<![CDATA[
			/*
			入参：T_CA_ASSESSOR的ID
			岀参：
			功能：将T_CA_ASSESSOR关联的T_CA_ASSESSMENT_INFO表的PROCESSURE_ID下的控制措施批量插入到T_CA_ASSESSMENT_INFO中
			*/
			insert into t_ca_assessment_info
	        (id, assessor_id, project_id, measure_id, org_id, operator_id, processure_id
	        , processure_name)
			select sys_guid(),a.id,a.project_id,c.id,a.org_id,a.operator_id,c.processure_id
	        ,(select pro.processure_name from t_processure_processure pro where pro.id=c.processure_id)
	        from T_CA_ASSESSOR a,T_RM_TREATMENT_MEASURE c
	        where a.id=$assessorId and c.processure_id in 
	        (select i.processure_id from t_ca_assessment_info i where i.assessor_id=a.id) and c.MEASURE_TYPE='process'
	        and not exists(select 1 from t_ca_assessment_info t where t.assessor_id=a.id and t.measure_id=c.id)  	
		]]>
	</sql>
	<sql id="insert_assessmentInfo_from_risk">
		<![CDATA[
			/*
			入参：T_CA_ASSESSOR的ID
			岀参：
			功能：将T_CA_ASSESSOR关联的T_CA_ASSESSMENT_INFO表的PROCESSURE_ID关联的风险所关联的控制措施批量插入到T_CA_ASSESSMENT_INFO中
			*/
			insert into t_ca_assessment_info
	        (id, assessor_id, project_id, measure_id, org_id, operator_id, processure_id
	        , processure_name)
			select sys_guid(),mm.assessor_id,mm.project_id,mm.measure_id,mm.org_id,mm.operator_id,mm.processure_id,mm.processure_name
			from (
			select distinct a.id assessor_id,a.project_id project_id,cm.id measure_id,a.org_id org_id,a.operator_id operator_id,cm.processure_id processure_id
			 ,(select pro.processure_name from t_processure_processure pro where pro.id=cm.processure_id) processure_name
			from T_CA_ASSESSOR a,T_RM_TREATMENT_MEASURE cm,T_PROCESSURE_RISK_PROCESSURE b,T_RM_RISK_MEASURE c 
			where a.id=$assessorId and b.risk_id =c.risk_id and c.measure_id=cm.id and cm.processure_id in 
			(select i.processure_id from t_ca_assessment_info i where i.assessor_id=a.id ) and cm.MEASURE_TYPE='risk'
			and not exists(select 1 from t_ca_assessment_info t where t.assessor_id=a.id and t.measure_id=cm.id)) mm  
		]]>
	</sql>
	<sql id="insert_assessmentPoint_from_point">
		<![CDATA[
			/*
			入参：T_CA_ASSESSMENT_PROJECT的ID
			岀参：
			功能：将流程关联的评价点和控制措施关联的评价点同步到t_ca_assessment_point表
			*/
			insert into t_ca_assessment_point
			(id, assessment_info_id,point_id, edesc,sample_number)
			/*控制措施评价点*/
			select sys_guid(), a.id,b.id,null,null
			from T_CA_ASSESSMENT_INFO a,T_RM_MEASURE_ASSESSMENT_POINT b
			where a.project_id=$projectId and b.treatment_measure_id=a.measure_id
			and a.measure_id is not null 
			and not exists(select 1 from t_ca_assessment_point c where c.assessment_info_id=a.id and c.point_id=b.id)/*排除已增加的*/
			union all
			/*流程评价点*/
			select sys_guid(), a.id,b.id,null,1
			from T_CA_ASSESSMENT_INFO a,T_RM_MEASURE_ASSESSMENT_POINT b
			where a.project_id=$projectId and b.processure_id=a.processure_id
			and a.measure_id is null and b.treatment_measure_id is null
			and not exists(select 1 from t_ca_assessment_point c where c.assessment_info_id=a.id and c.point_id=b.id)/*排除已增加的*/
		]]>
	</sql>
	<sql id="insert_assessmentPoint_from_syspoint">
		<![CDATA[
			/*
			入参：T_CA_ASSESSMENT_PROJECT的ID
			岀参：
			功能：将流程关联的评价点和控制措施关联的评价点同步到t_ca_assessment_point表
			*/
			insert into t_ca_assessment_point
			(id, assessment_info_id,point_id, edesc,sample_number)
		      select sys_guid(), a.id,b.id,null,1
		      from T_CA_ASSESSMENT_INFO a,T_IC_ASSESSMENT_POINT b
		      where a.project_id=$projectId 
		      and a.measure_id is not null 
		      and not exists(select 1 from t_ca_assessment_point c where c.assessment_info_id=a.id and c.point_id=b.id)/*排除已增加的*/
		      union all
		      select sys_guid(), a.id,b.id,null,1
		      from T_CA_ASSESSMENT_INFO a,T_IC_ASSESSMENT_POINT b
		      where a.project_id=$projectId 
		      and a.measure_id is null 
		      and not exists(select 1 from t_ca_assessment_point c where c.assessment_info_id=a.id and c.point_id=b.id)/*排除已增加的*/
		]]>
	</sql>
	<sql id="query_tempRelaTarget">
		<![CDATA[
			/*
			入参：t_ca_assessment_temp的ID
			岀参：
			功能：t_ca_assessment_temp下的关联对象查询出来
			*/
			select t2.id,t2.target_id,t2.temp_rela_target_parent_id,
			(select p1.processure_name from t_processure_processure p1 where t2.target_id=p1.id) target_name,
			(select p1.processure_name from t_processure_processure p1 where t1.parent_target_id=p1.id) target_parent_name
			from T_CA_TEMP_RELA_TARGET t2,
			t_ca_assessment_temp t,
			T_CA_TEMP_RELA_TARGET_PARENT t1
			where t.id = t1.assessment_temp_id
			and t1.id = t2.temp_rela_target_parent_id 
			and t.id=:tempId
         ]]>
       </sql>
      <sql id="query_riskLevelSUM">
      	<![CDATA[
      	select
        sum(case 
            when ecomment = '低' then ct 
        end) l,
        sum(case 
            when ecomment = '中' then ct 
        end) m,
        sum(case 
            when ecomment = '高' then ct 
        end) h  
    from
        (SELECT
            (CASE                  
                WHEN NOT EXISTS(SELECT
                    1                  
                FROM
                    t_rm_chartmatrix CM,
                    T_RM_CHART_COLOR CC                  
                WHERE
                    A.COMPANY_ID=CM.COMPANY_ID                      
                    AND CM.COMPANY_ID=CC.COMPANY_ID) THEN 
                    (SELECT
                    max(ECOMMENT) keep(dense_rank first order by aa.x_value,aa.y_value,cc.ecomment desc)                 
                FROM
                    T_RM_CHART_COLOR CC   ,t_rm_chartmatrix aa
                WHERE
                    CC.COLORSET_ID= aa.COLORSET_ID    
                        and cc.company_id is null
                        and aa.company_id is null                              
                            and x_value>=ra.probability                              
                            and y_value>=ra.impacts 
                        )                    
                    ELSE 
                      (SELECT
                    max(ECOMMENT) keep(dense_rank first order by aa.x_value,aa.y_value,cc.ecomment desc)                 
                FROM
                    T_RM_CHART_COLOR CC   ,t_rm_chartmatrix aa
                WHERE
                    CC.COLORSET_ID= aa.COLORSET_ID    
                        and cc.company_id =aa.company_id                             
                            and x_value>=ra.probability                              
                            and y_value>=ra.impacts 
                        )                
                    END                 
                ) ecomment,1 ct 
            FROM
                T_RM_RISKS A left join t_rm_risk_adjust_history ra on a.id=ra.risk_id and ra.is_latest='1'
            where
                elevel = ? 
                and company_id = ? 
            union
            all select
                '低',
                0 from dual
            union
            all select
                '中',
                0 from dual
            union
            all select
                '高',
                0 from dual
        ) B 
      	]]>
      </sql>
      <!-- 内控评估模块  更新评价点有效数及缺陷数 -->
      <sql id="update_point">
		<![CDATA[
			update  t_ca_assessment_point p 
                  set p.effective_number=(select count(*) from t_ca_sample s where s.assessment_point_id=p.id and s.eresult='Y')
                         , p.defect_number=(select count(*) from t_ca_sample s where s.assessment_point_id=p.id and s.eresult='N')
                     where p.id=:id
		]]>
	</sql>
	<!-- 内控评估模块 初始化计划样本 -->
	<sql id="init_project_samples">
		<![CDATA[
			insert into t_ca_sample
                    (id, sample_code, assessment_point_id, sample_name, eresult)
					select sys_guid(),
						c.processure_id
							,a.id,'样本','Y'
								from t_ca_assessment_point a,t_ca_assessment_info c,
									(select rownum rn from user_tables,user_tables)b
										where  a.assessment_info_id=c.id
											and c.project_id=:projectId
									and b.rn<=a.sample_number
		]]>
	</sql>
	<sql id="update_info">
		<![CDATA[
			/*
			入参：T_CA_ASSESSMENT_PROJECT的ID
			岀参：
			功能：T_CA_TEMP_RELA_TARGET_PARENT的assessment_standard来更新T_CA_ASSESSMENT_INFO的ASSESSMENT_RULE
			*/
			update T_CA_ASSESSMENT_INFO a set a.ASSESSMENT_RULE=(select c.assessment_standard from T_CA_TEMP_RELA_TARGET b,T_CA_TEMP_RELA_TARGET_PARENT c,T_CA_ASSESSMENT_PROJECT d
                              where b.target_id=a.processure_id and b.temp_rela_target_parent_id=c.id and c.assessment_temp_id=d.assessment_temp_id and d.id=a.project_id and d.ID=$projectId)
                              where a.project_id=$projectId
		]]>
	</sql>
	<sql id="update_tempRelaTargetParent">
		<![CDATA[
			/*
			入参：T_CA_ASSESSMENT_PROJECT的ID和t_ca_assessment_temp的id
			岀参：
			功能：T_CA_ASSESSMENT_INFO的ASSESSMENT_RULE来更新T_CA_TEMP_RELA_TARGET_PARENT的assessment_standard
			*/
			update t_ca_temp_rela_target_parent p set p.assessment_standard=(select distinct i.assessment_rule from t_ca_assessment_info i,t_ca_temp_rela_target t,t_ca_assessment_project pro 
			where i.processure_id=t.target_id and p.id=t.temp_rela_target_parent_id and pro.assessment_temp_id=p.assessment_temp_id
			and pro.id=i.project_id and pro.id=$projectId) where p.assessment_temp_id=$tempId
		]]>
	</sql>
	<sql id="update_point_init">
		<![CDATA[
			/*
			入参：T_CA_ASSESSMENT_PROJECT的ID
			功能：初始化评价结果的有效数和缺陷数
			*/
			update (select p.effective_number effective_number,p.sample_number sample_number,p.defect_number defect_number from t_ca_assessment_point p, t_ca_assessment_info i
			where p.assessment_info_id=i.id and i.project_id=$projectId ) set effective_number=sample_number,defect_number=0 
		]]>
	</sql>
	<!-- 内控评估模块  控制措施部门分布情况统计 -->
	<sql id="query_treatmentMeasure_org">
		<![CDATA[
			select (case when o.org_name is null then '无' else o.org_name end) org_name ,count(t.id) as orgCount 
            from t_rm_treatment_measure t left join t_sys_organization o on  t.org_id=o.id
            where t.company_id=:companyId 
            group by o.org_name
            order by o.org_name asc

		]]>
	</sql>
	<!--内控评估模块  控制措施流程分布情况统计 -->
	<sql id="query_treatmentMeasure_processure">
		<![CDATA[
		 select (case when pp.processure_name is null then '无' else pp.processure_name end) processure_name,count(m.measure_name) 
		   from t_rm_treatment_measure m left join (select lp.id lpid,p.processure_name processure_name
		   from t_processure_processure lp,t_processure_processure p 
		   where  lp.id_seq like p.id_seq||'%' and lp.is_leaf=1 and p.elevel=:elevel) pp on m.processure_id=pp.lpid
		   where m.company_id=:companyId
		   group by pp.processure_name
		   order by processure_name asc
		]]>
	</sql>
	<!--控制措施流程列表分组查询-->
	<sql id="query_treatmentMeasureGroup_processure">
		<![CDATA[
		 select m.id,m.measure_name,m.control_type,m.control_measure,m.control_frequency,m.trigger_type,
		(case when pp.processure_name is null then '无' else pp.processure_name end) processure_name
		from t_rm_treatment_measure m left join (select lp.id lpid,p.processure_name processure_name
		from t_processure_processure lp,t_processure_processure p 
		where  lp.id_seq like p.id_seq||'%' and lp.is_leaf=1 and p.elevel=:elevel) pp on m.processure_id=pp.lpid
		where m.company_id=:companyId
		order by pp.processure_name asc
		]]>
	</sql>
	<!--控制措施风险分布-->
	<sql id="query_treatmentMeasure_risk">
		<![CDATA[
	  select ppr.risk_name,count(ppr.measure_name)
      from (select  (case when rr.risk_name is null then '无' else rr.risk_name end) risk_name ,m.measure_name
	  from t_rm_treatment_measure m left join t_rm_risk_measure rm on rm.measure_id=m.id 
      left join (select r.id rid,pr.risk_name risk_name from t_rm_risks r,t_rm_risks pr
      where r.id_seq like pr.id_seq||'%' and r.is_leaf='1' and pr.elevel=:elevel and r.company_id=:companyId)rr on rr.rid=rm.risk_id  )ppr
      group by ppr.risk_name 
      order by ppr.risk_name asc
		]]>
	</sql>
		<!--控制措施风险列表分组查询-->
	<sql id="query_treatmentMeasureGroup_risk">
		<![CDATA[
		  select distinct m.id,m.measure_name,m.control_type,m.control_measure,m.control_frequency,m.target_type ,
		  (case when rr.risk_name is null then '无' else rr.risk_name end) risk_name,rr.rid  riskid
          from t_rm_treatment_measure m left join t_rm_risk_measure rm on rm.measure_id=m.id 
          left join (select r.id rid,pr.risk_name risk_name from t_rm_risks r,t_rm_risks pr
          where r.id_seq like pr.id_seq||'%' and r.is_leaf='1' and pr.elevel=:elevel and r.company_id=:companyId)rr on rr.rid=rm.risk_id 
		]]>
	</sql>
	<sql id="insert_assessmentSumary">
		<![CDATA[
			/*
			入参：T_CA_ASSESSMENT_PROJECT的ID
			岀参：
			功能：把T_CA_ASSESSMENT_POINT汇总后批量插入到T_CA_ASSESSMENT_SUMARY
			*/
			insert into t_ca_assessment_sumary(id,project_id,processure_id,measure_id,point_id,SAMPLE_NUMBER,EFFECTIVE_NUMBER,DEFECT_NUMBER)
		select  sys_guid(),i.project_id,i.processure_id,i.measure_id,p.point_id
			,sum(case when s.ID is not null then 1 else 0 end)
			,sum(case when s.eresult='Y' then 1 else 0 end)
			,sum(case when s.eresult='N' then 1 else 0 end)
	      from t_ca_assessment_info i,t_ca_assessment_point p,T_CA_SAMPLE s 
	      where i.id=p.assessment_info_id and s.ASSESSMENT_POINT_ID=p.id and i.project_id=$projectId 
	      and not exists(select 1 from t_ca_assessment_sumary s where s.project_id=i.PROJECT_ID and s.point_id=p.POINT_ID)/*排除已增加的*/
	      group by i.project_id,i.processure_id,i.measure_id,p.point_id
	      order by i.processure_id
			
		]]>
	</sql>
		<!--项目评价结果统计表-->
	<sql id="query_caAssessmentPoint">
		<![CDATA[
		   select pp.id,pp.processure_name,
  sum(case when decode(s.sample_number,0,0,case when (s.EFFECTIVE_NUMBER+s.defect_number)=0 then 0 else s.EFFECTIVE_NUMBER/(s.EFFECTIVE_NUMBER+s.defect_number) end)=1 then 1 else 0 end) effectCount,
            round((sum(case when decode(s.sample_number,0,0,case when (s.EFFECTIVE_NUMBER+s.defect_number)=0 then 0 else s.EFFECTIVE_NUMBER/(s.EFFECTIVE_NUMBER+s.defect_number) end)=1 then 1 else 0 end)/count(*))*100,2)effectPercent,
          sum(case when decode(s.sample_number,0,0,case when (s.EFFECTIVE_NUMBER+s.defect_number)=0 then 0 else s.EFFECTIVE_NUMBER/(s.EFFECTIVE_NUMBER+s.defect_number) end)!=1 then 1 else 0 end)defectCount,
          round((sum(case when decode(s.sample_number,0,0,case when (s.EFFECTIVE_NUMBER+s.defect_number)=0 then 0 else s.EFFECTIVE_NUMBER/(s.EFFECTIVE_NUMBER+s.defect_number) end)!=1 then 1 else 0 end)/count(*))*100,2) DefectPercent
 from t_ca_assessment_sumary s,t_processure_processure pp where s.processure_id=pp.id and s.project_id=:projectId
  group by pp.id,pp.processure_name
		]]>
	</sql>
		<!--评价项目测试进度统计表（按测评人员）-->
	<sql id="query_caAssessmentPointCountByEmploy">
		<![CDATA[
		  select mm.real_name realName,
          round( case when sum(mm.ecount)<=0 then sum(mm.yesresult)
		       when sum(mm.yesresult)<=0 then 0
		       else sum(mm.yesresult)/sum(mm.ecount)*100 
		       end,2) as resultPercent,
		  sum(mm.ecount) pointCount,sum(mm.yesresult) yesresult,sum(mm.noresult) noresult
          from (select a.operator_id,e.real_name,p.eresult,count(*) as ecount,
          sum(case when p.eresult='已评价' then 1 else 0 end) yesresult,
          sum(case when p.eresult is null then 1 else 0 end) noresult
          from T_CA_ASSESSMENT_INFO i,T_CA_ASSESSOR a,T_CA_ASSESSMENT_POINT p,t_sys_employee e 
          where i.id=p.assessment_info_id  
          and a.id=i.assessor_id
          and a.operator_id=e.id
          and i.project_id=:projectId
          group by a.operator_id ,e.real_name,p.eresult) mm
          group by mm.real_name
		]]>
	</sql>
	<!-- 评价项目测试进度统计表（按测评流程）-->
	<sql id="query_caAssessmentPointCountByProcess">
		<![CDATA[
		select mm.processure_name processureName,
        round( case when sum(mm.ecount)<=0 then sum(mm.yesresult)
		       when sum(mm.yesresult)<=0 then 0
		       else sum(mm.yesresult)/sum(mm.ecount)*100 
		       end,2) as resultPercent,
		sum(mm.ecount) pointCount,sum(mm.yesresult) yesresult,sum(mm.noresult) noresult
        from (select i.processure_id,pp.processure_name,p.eresult,count(*) as ecount,
        sum(case when p.eresult='已评价' then 1 else 0 end) yesresult,
        sum(case when p.eresult is null then 1 else 0 end) noresult
        from T_CA_ASSESSMENT_INFO i,T_CA_ASSESSMENT_POINT p,t_processure_processure pp 
        where i.id=p.assessment_info_id  
        and pp.id=i.processure_id
        and i.project_id=:projectId
        group by i.processure_id ,pp.processure_name,p.eresult) mm
        group by mm.processure_name
		]]>
	</sql>
		<!-- 评价项目测试进度统计表（按被评单位）-->
	<sql id="query_caAssessmentPointCountByOrg">
		<![CDATA[
		select mm.org_name orgName,  
		round( case when sum(mm.ecount)<=0 then sum(mm.yesresult)
		       when sum(mm.yesresult)<=0 then 0
		       else sum(mm.yesresult)/sum(mm.ecount)*100 
		       end,2) as resultPercent,
		sum(mm.ecount) pointCount,sum(mm.yesresult) yesresult,sum(mm.noresult) noresult
      
        from (select ap.company_id ,o.org_name,p.eresult,count(*) as ecount,
        sum(case when p.eresult='已评价' then 1 else 0 end) yesresult,
        sum(case when p.eresult is null then 1 else 0 end) noresult
        from T_CA_ASSESSMENT_INFO i,T_CA_ASSESSMENT_POINT p,t_sys_organization o ,T_CA_ASSESSMENT_PROJECT ap
        where i.id=p.assessment_info_id  
        and ap.id=i.project_id 
        and ap.company_id=o.id
        and ap.is_enabled='2'
        group by ap.company_id ,o.org_name,p.eresult) mm
        group by mm.org_name
		]]>
	</sql>
	<!-- 控制缺陷统计图表（按流程、等级）-->
	<sql id="query_DefectProcessCountByLevel">
		<![CDATA[
		select bb.processure_name,bb.totalCount,round((oneCount/bb.totalCount)*100,2)onePercent,oneCount,
		round((secondCount/bb.totalCount)*100,2)secondPercent,secondCount,
		round((thirdCount/bb.totalCount)*100,2)thirdPercent,thirdCount
		from(select mm.processure_name,sum(case when mm.defect_level='DEFECT_DEFECT_GRADE_One' then mm.ecount else 0 end) oneCount,
		sum(case when mm.defect_level='DEFECT_DEFECT_GRADE_Second' then mm.ecount else 0 end) secondCount,
		sum(case when mm.defect_level='DEFECT_DEFECT_GRADE_Third' then mm.ecount else 0 end)thirdCount,
		sum(case when mm.defect_level is null then mm.ecount else 0 end)nullCount,
		sum(mm.ecount)totalCount
		from(select (case when a.processure_name is null then '无' else a.processure_name end) processure_name, 
		d.defect_level, count(*) ecount
		from T_CA_DEFECT d left join t_ca_defect_processure p  on p.defect_id=d.id
	    left join t_processure_processure a on a.id=p.processure_id
		where d.company_id=:companyId
		group by p.processure_id,a.processure_name,d.defect_level
		order by a.processure_name
		)mm
		group by mm.processure_name 
		order by mm.processure_name asc)bb 
		]]>
	</sql>
		<!-- 控制缺陷统计图表（按流程、类型）-->
	<sql id="query_DefectProcessCountByType">
		<![CDATA[
		select dd.processure_name,dd.totalCount,round((designCount/dd.totalCount)*100,2)designPercent,designCount,
		round((bothCount/dd.totalCount)*100,2)bothPercent,bothCount,
		round((executeCount/dd.totalCount)*100,2)executePercent,executeCount
		from(select mm.processure_name,sum(case when mm.defect_type='DEFECT_DEFECT_TYPE_Design' then mm.ecount else 0 end) designCount,
		sum(case when mm.defect_type='DEFECT_DEFECT_TYPE_Both' then mm.ecount else 0 end) bothCount,
		sum(case when mm.defect_type='DEFECT_DEFECT_TYPE_Execute' then mm.ecount else 0 end) executeCount,
		sum(mm.ecount)totalCount
		from(select (case when a.processure_name is null then '无' else a.processure_name end) processure_name , 
	    d.defect_type, count(*) ecount
	    from T_CA_DEFECT d left join t_ca_defect_processure p  on p.defect_id=d.id
	    left join t_processure_processure a on a.id=p.processure_id
	    where  d.company_id=:companyId
	    group by p.processure_id,a.processure_name,d.defect_type
	    order by a.processure_name
		)mm
		group by mm.processure_name
		order by mm.processure_name asc)dd
		]]>
	</sql>
	<!-- 控制缺陷统计图表（按部门、等级）-->
	<sql id="query_DefectOrgCountByLevel">
		<![CDATA[
		select bb.org_name,bb.totalCount,round((oneCount/bb.totalCount)*100,2)onePercent,oneCount,
	    round((secondCount/bb.totalCount)*100,2)secondPercent,secondCount,
	    round((thirdCount/bb.totalCount)*100,2)thirdPercent,thirdCount
	    from(select mm.org_name,sum(case when mm.defect_level='DEFECT_DEFECT_GRADE_One' then mm.ecount else 0 end) oneCount,
	    sum(case when mm.defect_level='DEFECT_DEFECT_GRADE_Second' then mm.ecount else 0 end) secondCount,
	    sum(case when mm.defect_level='DEFECT_DEFECT_GRADE_Third' then mm.ecount else 0 end)thirdCount,
	    sum(case when mm.defect_level is null then mm.ecount else 0 end)nullCount,
	    sum(mm.ecount)totalCount
	    from(select (case when o.org_name is null then '无' else o.org_name end) org_name,
	    d.defect_level, count(*) ecount
	    from T_CA_DEFECT d left join t_ca_defect_processure p  on p.defect_id=d.id
	    left join t_processure_processure a on a.id=p.processure_id
	    left join t_sys_organization o on o.id=a.manage_org_id
	    where d.company_id=:companyId
	    group by a.manage_org_id,o.org_name,d.defect_level
	    order by o.org_name
	    )mm
	    group by mm.org_name
	    order by mm.org_name asc)bb
		]]>
	</sql>
		<!-- 控制缺陷统计图表（按部门、类型）-->
	<sql id="query_DefectOrgCountByType">
		<![CDATA[
		select dd.org_name,dd.totalCount,round((designCount/dd.totalCount)*100,2)designPercent,designCount,
	    round((bothCount/dd.totalCount)*100,2)bothPercent,bothCount,
	    round((executeCount/dd.totalCount)*100,2)executePercent,executeCount
	    from(select mm.org_name,sum(case when mm.defect_type='DEFECT_DEFECT_TYPE_Design' then mm.ecount else 0 end) designCount,
	    sum(case when mm.defect_type='DEFECT_DEFECT_TYPE_Both' then mm.ecount else 0 end) bothCount,
	    sum(case when mm.defect_type='DEFECT_DEFECT_TYPE_Execute' then mm.ecount else 0 end) executeCount,
	    sum(mm.ecount)totalCount
	    from(select (case when o.org_name is null then '无' else o.org_name end) org_name,
	    d.defect_type, count(*) ecount
	    from T_CA_DEFECT d left join t_ca_defect_processure p  on p.defect_id=d.id
	    left join t_processure_processure a on a.id=p.processure_id
	    left join t_sys_organization o on o.id=a.manage_org_id
	    where d.company_id=:companyId
	    group by a.manage_org_id,o.org_name,d.defect_type
	    order by o.org_name
	    )mm
	    group by mm.org_name
	    order by mm.org_name asc)dd
		]]>
	</sql>
	<!-- 控制进度统计图表（按计划）-->
	<sql id="query_AssessmentPointCountByProject">
		<![CDATA[
		select mm.id,mm.project_name projectName,  
        round( case when sum(mm.ecount)<=0 then sum(mm.yesresult)
           when sum(mm.yesresult)<=0 then 0
           else sum(mm.yesresult)/sum(mm.ecount)*100 end,2) as resultPercent,
        sum(mm.ecount) pointCount,sum(mm.yesresult) yesresult,sum(mm.noresult) noresult
        from (select ap.id ,ap.project_name,p.eresult,count(*) as ecount,
        sum(case when p.eresult='已评价' then 1 else 0 end) yesresult,
        sum(case when p.eresult is null then 1 else 0 end) noresult
        from T_CA_ASSESSMENT_INFO i,T_CA_ASSESSMENT_POINT p ,T_CA_ASSESSMENT_PROJECT ap
        where i.id=p.assessment_info_id  
        and ap.id=i.project_id 
        and ap.is_enabled='2'
        group by ap.id ,ap.project_name,p.eresult) mm
        group by mm.project_name,mm.id
        
		]]>
	</sql>
</sqls>